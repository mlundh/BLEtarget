/*
 * i2c_slave.c
 *
 *  Created on: Jul 8, 2024
 *      Author: mlundh
 */


#include "i2c_slave.h"

volatile i2c_t I2C_slave_obj;

extern reg_t g_i2c_reg_data[];



int i2c_slave_init(I2C_HandleTypeDef *hi2c){
  I2C_slave_obj.i2c_handler = hi2c;
  HAL_I2C_EnableListen_IT(&hi2c1);
}

static void ResetI2C(I2C_HandleTypeDef* rev_i2c){
  HAL_I2C_DeInit(rev_i2c);
  HAL_I2C_Init(rev_i2c);
}

void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrMatchCode)
{
  if(TransferDirection == I2C_DIRECTION_TRANSMIT)
  {
    // we do not support write!
  }
  else
  {
      HAL_I2C_Slave_Sequential_Transmit_IT(hi2c, 0, I2C_LAST_FRAME);
  }
}

void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
{
  HAL_I2C_EnableListen_IT(hi2c);
}

void HAL_I2C_ListenCpltCallback (I2C_HandleTypeDef *hi2c){
  HAL_I2C_EnableListen_IT(hi2c);
}

void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c){
  HAL_I2C_EnableListen_IT(hi2c);
}

void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
{
  //HAL_I2C_ERROR_NONE       0x00000000U    /*!< No error           */
  //HAL_I2C_ERROR_BERR       0x00000001U    /*!< BERR error         */
  //HAL_I2C_ERROR_ARLO       0x00000002U    /*!< ARLO error         */
  //HAL_I2C_ERROR_AF         0x00000004U    /*!< Ack Failure error  */
  //HAL_I2C_ERROR_OVR        0x00000008U    /*!< OVR error          */
  //HAL_I2C_ERROR_DMA        0x00000010U    /*!< DMA transfer error */
  //HAL_I2C_ERROR_TIMEOUT    0x00000020U    /*!< Timeout Error      */
  uint32_t error_code = HAL_I2C_GetError(hi2c);
  if (error_code != HAL_I2C_ERROR_AF)
  {

  }
  HAL_I2C_EnableListen_IT(hi2c);
}
